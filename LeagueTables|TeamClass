
/**
 * Class Team - An instance of this class holds the statistics
 * for a team in a league.
 * 
 * @author Dennis Bugumba
 * @version 1.0
 */
public class Team implements Comparable<Team>
{
   /* instance variables */
   private String name;
   private int won; // the number of games won
   private int drawn; // the number of games drawn
   private int lost; // the number of games lost
   private int goalsFor; // the number of goals scored by the team
   private int goalsAgainst; // the number of goals scored against the team   

   /**
    * Constructor for objects of class Team. It sets the name of the team
    * to that provided by the argument.
    */
   public Team(String aName)
   {
      super();
      this.name = aName;
   }      

   /* instance methods */

   /**
    * Set the number of games won
    */
   public void setWon(int aWon)
   {
      this.won = aWon;      
   }
   
   /**
    * Set the number of games drawn
    */  
   public void setDrawn(int aDrawn)
   {
      this.drawn = aDrawn;
   }
   
   /**
    * Set the number of games lost
    */
   public void setLost(int aLost)
   {
      this.lost= aLost;      
   }
   
   /**
    * Set the number of goals scored by the team
    */
   public void setGoalsFor(int aGoalsFor)
   {
      this.goalsFor = aGoalsFor;      
   }
   
   /**
    * Set the number of games scored against the team
    */
   public void setGoalsAgainst(int aGoalsAgainst)
   {
      this.goalsAgainst = aGoalsAgainst;      
   }
   
   /**
    * Return the name of the team
    */
   public String getName()
   {
      return this.name;
   }
   
   /**
    * Return the number of games won
    */
   public int getWon()
   {
      return this.won;
   }
   
   /**
    * Return the number of games drawn
    */
   public int getDrawn()
   {
      return this.drawn;
   }
   
   /**
    * Return the number of games lost
    */
   public int getLost()
   {
      return this.lost;
   }
   
   /**
    * Return the number of goals scored by the team
    */
   public int getGoalsFor()
   {
      return this.goalsFor;
   }
   
   /**
    * Return the number of goals scored against the team
    */
   public int getGoalsAgainst()
   {
      return this.goalsAgainst;
   }
   
   /**
    * Return the number of games played
    */
   public int getPlayed()
   {
      return this.getWon() + this.getDrawn() + this.getLost();
   }
   
   /**
    * Return the goal difference
    */
   public int getGoalDifference()
   {
      return this.getGoalsFor() - this.getGoalsAgainst();
   }
   
   /**
    * Return the number of points gained
    */
   public int getPoints()
   {
      return this.getWon() * 3 + this.getDrawn();
   }
   
   /**
    * Compares the receiver with the argument and returns:
    * The primary sort arranged in descending order of points scored,
    * and if two teams have scored same points, the method returns a secondary sort 
    * arranged in descending order of goal difference. 
    */
   public int compareTo(Team anotherTeam)
   {
      int primary = this.getPoints() - anotherTeam.getPoints();
      int secondary = this.getGoalDifference() - anotherTeam.getGoalDifference();
      if (primary == 0)
      {
         return secondary;
      }
      else
      {
         return primary;
      }
   }
}
